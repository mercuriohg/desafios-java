==============================================
üëç Desafios Simples (n√≠vel 1)
==============================================
‚¨ú 000. Ol√°, Mundo! 
‚¨ú 001. Verificador de Pal√≠ndromo
‚¨ú 002. Soma de n√∫meros √∫nicos
‚¨ú 003. Orienta√ß√£o a Objetos: Zool√≥gico
‚¨ú 004. Contador de Vogais
‚¨ú 005. Fatorial
‚¨ú 006. N√∫meros Primos
‚¨ú 007. Inverter String
‚¨ú 008. Sauda√ß√£o personalizada com ponto de exclama√ß√£o
‚¨ú 009. Receber dois n√∫meros e mostrar opera√ß√µes
‚¨ú 010. Verificar se todos os caracteres de uma string s√£o d√≠gitos (0 a 9)
‚¨ú 011. Calcular a √°rea de um c√≠rculo (usu√°rio informa o raio)
‚¨ú 012. Converter Celsius ‚Üî Fahrenheit
‚¨ú 013. Encontrar o maior de 3 n√∫meros dados
‚¨ú 014. Calcular m√©dia aritm√©tica de uma lista de n√∫meros
‚¨ú 015. Criar um array de 5 n√∫meros inteiros e imprimir cada n√∫mero
‚¨ú 016. Somar todos os elementos de um array de inteiros
‚¨ú 017. Calcular a m√©dia dos valores de um array de inteiros
‚¨ú 018. Contar quantos n√∫meros pares existem em um array
‚¨ú 019. Contar quantos n√∫meros √≠mpares existem em um array
‚¨ú 020. Criar um programa que armazene 5 nomes em um array e os imprima um por linha
‚¨ú 021. Criar um programa que leia 5 notas de alunos, guarde em um array e informe a m√©dia
‚¨ú 022. Criar um array de Strings e imprimir o maior e o menor texto armazenado
‚¨ú 023. Verificar se um n√∫mero existe dentro de um array
‚¨ú 024. Criar um array de 10 n√∫meros e inverter a ordem dos elementos
‚¨ú 025. Criar um programa que leia 10 n√∫meros e armazene apenas os positivos em um array
‚¨ú 026. Criar um programa que leia 10 n√∫meros e armazene apenas os negativos em um array
‚¨ú 027. Criar um programa que armazene 5 pares (chave, valor) em um HashMap (ex: produto e pre√ßo) e depois imprima todos
‚¨ú 028. Criar um programa que receba nomes e idades de 5 pessoas e armazene em um Map<String, Integer>. Depois, exibir quem √© o mais velho
‚¨ú 029. Criar um programa que leia uma lista de nomes e remova os repetidos usando um Set
‚¨ú 030. Conversor de minutos para horas e minutos
‚¨ú 031. Mostrar o dia da semana a partir de um n√∫mero (1‚Äì7)
‚¨ú 032. Calculadora de IMC
‚¨ú 033. Trocar valores de duas vari√°veis sem usar vari√°vel auxiliar
‚¨ú 034. Simulador de dado (1 a 6)
‚¨ú 035. Jogo de adivinha√ß√£o simples (1 a 10)

==============================================
üß† Desafios de L√≥gica Intermedi√°ria (n√≠vel 2)
==============================================
‚¨ú 001. Soma dos D√≠gitos
‚¨ú 002. Fibonacci at√© N termos
‚¨ú 003. Remover Duplicados de um Array
‚¨ú 004. Maior e menor n√∫mero de uma lista
‚¨ú 005. Contar Frequ√™ncia de Caracteres
‚¨ú 006. Par ou √çmpar
‚¨ú 007. Tabuada de um n√∫mero
‚¨ú 008. Verificar Anagramas
‚¨ú 009. Contar Palavras em uma Frase
‚¨ú 010. Primeiro Caractere Repetido
‚¨ú 011. Verificar se todos os caracteres s√£o √∫nicos
‚¨ú 012. Caixa Eletr√¥nico Simples (POO)
‚¨ú 013. Validador de Senha
‚¨ú 014. Remover elementos repetidos mantendo a ordem
‚¨ú 015. Somar apenas n√∫meros positivos de uma lista
‚¨ú 016. Ordenar um array de inteiros (sem usar sort)
‚¨ú 017. Transformar String em T√≠tulo
‚¨ú 018. Classifica√ß√£o de tri√¢ngulo pelos lados
‚¨ú 019. Pot√™ncia
‚¨ú 020. Resto da Divis√£o
‚¨ú 021. Calcular o MDC (M√°ximo Divisor Comum) de dois n√∫meros
‚¨ú 022. Calcular o MMC (M√≠nimo M√∫ltiplo Comum) de dois n√∫meros
‚¨ú 023. Implementar busca bin√°ria em um array ordenado
‚¨ú 024. Verificar se uma matriz quadrada √© sim√©trica
‚¨ú 025. Rotacionar um array para a esquerda/direita
‚¨ú 026. Calcular m√©dia ponderada
‚¨ú 027. Normalizar texto (remover acentos e deixar min√∫sculo)
‚¨ú 028. Simulador de estoque (POO: classe Produto, adicionar/remover)
‚¨ú 029. Gerador de n√∫meros da Mega-Sena (6 n√∫meros n√£o repetidos)
‚¨ú 030. Intercalar duas listas alternadamente
‚¨ú 031. Gerador de senha forte (letras, n√∫meros, s√≠mbolos)

==============================================
üîÅ Desafios com La√ßos e Condicionais (n√≠vel 3)
==============================================
‚¨ú 001. Contagem Regressiva
‚¨ú 002. N√∫meros Pares de 1 a 100
‚¨ú 003. Soma de 10 n√∫meros digitados
‚¨ú 004. N√∫mero Secreto com Tentativas Infinitas
‚¨ú 005. Menu com do-while
‚¨ú 006. Contar n√∫meros negativos, positivos e zeros
‚¨ú 007. Tabuada de v√°rios n√∫meros
‚¨ú 008. Soma at√© n√∫mero negativo
‚¨ú 009. Verificar n√∫mero perfeito
‚¨ú 010. Gerador de sequ√™ncia: pot√™ncias de 2
‚¨ú 011. M√©dia de notas com la√ßo
‚¨ú 012. N√∫mero Primo com break
‚¨ú 013. Contar d√≠gitos de um n√∫mero
‚¨ú 014. Inverter n√∫mero inteiro
‚¨ú15. Jogo de adivinha√ß√£o com tentativas limitadas
‚¨ú 016. Imprimir um tri√¢ngulo de asteriscos alinhado √† esquerda
‚¨ú 017. Imprimir um tri√¢ngulo de asteriscos alinhado ao centro
‚¨ú 018. Imprimir no console um tri√¢ngulo sim√©trico de asteriscos
‚¨ú 019. Verificar se um n√∫mero √© Armstrong
‚¨ú 020. Gerar a tabuada de todos os n√∫meros de 1 a 10
‚¨ú 021. Simular um rel√≥gio digital (00:00 at√© 23:59)
‚¨ú 022. Cron√¥metro simples (contar at√© N segundos)
‚¨ú 023. Somat√≥rio de s√©rie (1/1 + 1/2 + ... + 1/N)
‚¨ú 024. Fibonacci em formato de pir√¢mide
‚¨ú 025. Simulador de corrida (mostrar carros avan√ßando a cada itera√ß√£o)
‚¨ú 026. Jogo de Craps (dados com regras simples)
‚¨ú 027. Histograma no console (gr√°fico de barras com *)
‚¨ú 028. Verificar se um n√∫mero √© perfeito e listar divisores
‚¨ú 029. Pir√¢mide de Fibonacci

==============================================
üì¶ Outros Desafios
==============================================
‚¨ú001. Conversor de decimal para bin√°rio
‚¨ú 002. Conversor de bin√°rio para decimal
‚¨ú 003. Verificar se um ano √© bissexto
‚¨ú 004. Contar quantas vezes uma palavra aparece em um texto
‚¨ú 005. Gerar senhas aleat√≥rias de tamanho definido pelo usu√°rio

==============================================
üöÄ Desafios Avan√ßados (n√≠vel 4)
==============================================
‚¨ú 001. Sistema de cadastro de alunos (usar classes, lista e m√©todos CRUD)
‚¨ú 002. Implementar uma fila e uma pilha com ArrayList (simulando estrutura de dados)
‚¨ú 003. Criar um sistema de agenda de contatos com busca por nome ou telefone
‚¨ú 004. Implementar um mini-sistema banc√°rio com transfer√™ncias entre contas
‚¨ú 005. Criar um programa que leia um arquivo de texto e conte as palavras mais frequentes
‚¨ú 006. Simular um jogo da velha para 2 jogadores no console
‚¨ú 007. Criar um programa que serialize e desserialize objetos em arquivos
‚¨ú 008. Implementar um sistema de notas de alunos usando HashMap (chave: nome, valor: lista de notas)
‚¨ú 009. Criar um simulador de carrinho de compras (POO + cole√ß√µes)
‚¨ú 010. Desenvolver um mini-sistema de autentica√ß√£o (login/senha) com persist√™ncia em arquivo
